apply plugin: 'com.android.application'

android {

    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "org.tuzhao.ftp"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 10005
        versionName "1.1.30"
        // dex突破65535的限制
        multiDexEnabled true
        // 默认渠道
        manifestPlaceholders = [CHANNEL_VALUE: "normal"]
    }

    flavorDimensions "minApi"

    productFlavors {
        normal {
            manifestPlaceholders = [CHANNEL_VALUE: "normal"]
        }

        a360 {
            manifestPlaceholders = [CHANNEL_VALUE: "a360"]
        }

        xiaomi {
            manifestPlaceholders = [CHANNEL_VALUE: "xiaomi"]
        }

        anzhi {
            manifestPlaceholders = [CHANNEL_VALUE: "anzhi"]
        }

        baidu {
            manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
        }

        meizu {
            manifestPlaceholders = [CHANNEL_VALUE: "meizu"]
        }

        tencent {
            manifestPlaceholders = [CHANNEL_VALUE: "tencent"]
        }

        alibaba {
            manifestPlaceholders = [CHANNEL_VALUE: "alibaba"]
        }
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            lintOptions {
                disable 'MissingTranslation'
            }
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "rsftp_${variant.buildType.name}_${releaseTime()}_${variant.flavorName}_${variant.versionName}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishNonDefault true
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'commons-net:commons-net:3.6'
    compile 'net.vrallev.android:cat:1.0.2'
    compile 'com.twofortyfouram:android-plugin-client-sdk-for-locale:4.0.2'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.umeng.analytics:analytics:6.1.2'
    compile 'junit:junit:4.12'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:support-v13:26.1.0'
    compile 'org.projectlombok:lombok:1.16.6'
    annotationProcessor 'org.projectlombok:lombok:1.16.6'
}

android {
    packagingOptions {
//        exclude 'META-INF/DEPENDENCIES.txt'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/NOTICE.txt'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/notice.txt'
//        exclude 'META-INF/license.txt'
//        exclude 'META-INF/dependencies.txt'
//        exclude 'META-INF/LGPL2.1'
    }
}

static def releaseTime() {
    return new Date().format("yy-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
}
